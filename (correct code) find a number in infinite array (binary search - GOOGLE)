
#include <iostream>

using namespace std;


// code for find element in sorted array of unknown size

int binarySearch( int arr[], int s , int e , int target){
    int mid = s + (e-s)/2;
    
    while (s <= e ){
        
        if (arr[mid] == target)
            return mid;
        
        if(arr[mid] > target)
            e = mid - 1 ;
            
        else
            s = mid + 1 ;
            
        mid = s + (e-s)/2;

        
    }
    
    return -1;
}

// we don't know size of array
// consider it infinite as per question
// assumtion array size if infinite, so no index out of exception

int findPosition(int arr[],int target){
    int s=0,e=1;
    int val = arr[e];
    
    while(val < target){
        s = e;
        e = 2*e;
        val = arr[e];
    }
    return binarySearch(arr , s , e , target);
}

int main()

{// this array goes to infinite

    int arr[]= { 1,2,3,4,4,6,7,8,9,10};
    int target = 7;
    cout<<"index is " << findPosition(arr,target);
    
    
    return 0;
}
