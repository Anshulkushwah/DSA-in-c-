
#include <iostream>
#include <map>
#include <list>



using namespace std;


// this is for GENERIC CODE matalab apan
//koi bhi typ ka data use kr skte hai
//initialize krne ki jarurat nahi hai bas int ki jgh typename DAAL DENA 'T'
template <typename T> 


class Graph{
    public:
    
   // map<T,list<T>>adjList; //this is without weight
    map<T,list<pair<T ,T>>>adjList;
    
    
    //void addEdge(T u, T v, bool direction){
   void addEdge(T u, T v,T weight, bool direction){
        //direction = 0 -> indirected Graph
        //direction = 1 -> directed Graph
        
        
        //for u->v
        //adjList[u].push_back(v);
        adjList[u].push_back(make_pair(v,weight));
        
        //check v->u
        if(direction == 0){
           //adjList[v].push_back(u);
           adjList[v].push_back(make_pair(u,weight));
        }
        
    }
    
    
    void printAdj(){
        for(auto i: adjList){
            cout<<i.first<<" -> ";
            
            for(auto j: i.second){
                //cout<<j<<", ";
                cout<<"(" << j.first << "," << j.second<<"), ";
                
            } 
            
            cout<<endl;
        }
    }
    
    
};


int main()
{
  Graph<int>g;
  
/*  g.addEdge(0,1,0);
  g.addEdge(1,2,0);
  g.addEdge(1,3,0);
  g.addEdge(2,3,0);
  g.addEdge(3,4,0);
  g.addEdge(2,4,0);
  */
  
  g.addEdge(0,1,3,0);
  g.addEdge(1,2,4,0);
  g.addEdge(1,3,9,0);
  g.addEdge(2,3,8,0);
  g.addEdge(3,4,11,0);
  g.addEdge(2,4,10,0);
  
  cout<< "Printing the Adjacency List :"<<endl;
  g.printAdj();
  
  
    return 0;
}

