#include <iostream>

using namespace std;

class Node
{
  // data member are below     
public:
  int data;
  Node *next;

  // constructor
    Node (int d)
  {
    this->data = d;
    this->next = NULL;
  }

};

//Find lenth of LinkList

int
length (Node * &head)
{
  Node *temp = head;
  int len = 0;

  while (temp != NULL)
    {
      len++;
      temp = temp->next;
    }
  return len;
}


void
insertAtHead (Node * &head, int d)
{
  //1) creation of node 
  Node *newNode = new Node (d);
  //2) set next pointer to head node 
  newNode->next = head;
  //3) Update head 
  head = newNode;
}


void
insertAtTail (Node * &tail, int d)
{
  //creation
  Node *temp = new Node (d);
  //
  tail->next = temp;
  //
  tail = temp;

}

void
insertAtPosition (Node * &head, int pos, int d)
{

  if (pos == 1)
    {
      insertAtHead (head, d);
    }

  else
    {
      // step 1 : creation of New Node
      Node *newNode = new Node (d);

      // step 2 : traverse
      Node *prev = head;
      int t = pos - 2;

      /*       ////////// tail updation pending ///////////

         int len = length (head);


         if(pos == len + 1){

         insertAtTail (tail, d);
         }

         ///////////                */

      int len = length (head);

      while (t--)
	{
	  prev = prev->next;
	}



      // step 3 : conection update
      if (pos <= len + 1)
	{
	  newNode->next = prev->next;
	  prev->next = newNode;
	}



    }

}




void
traverse (Node * &head)
{
  Node *temp = head;

  while (temp != NULL)
    {
      cout << temp->data << " ";
      temp = temp->next;
    }
  cout << endl;
}

int
main ()
{
  //  object creation
  Node *first = new Node (3);
  Node *head = first;
  Node *tail = first;

  insertAtTail (tail, 5);
  insertAtTail (tail, 7);
  insertAtTail (tail, 9);
  insertAtTail (tail, 11);


  traverse (head);

  insertAtPosition (head, 2, 12);

  traverse (head);

  cout << "length of LinkList : " << length (head) << endl;

  return 0;
}
