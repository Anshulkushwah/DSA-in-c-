
#include <iostream>
#include<stack>
using namespace std;


void insertAtBottom(stack<int>&st, int item){
    //base case
    if(st.empty())
    {
        st.push(item);
        return;
    }
    
    //step 1
    int topElement = st.top();
    st.pop();
    
    //step 2 recursive call
    insertAtBottom(st,item);
    
    //step 3 
    st.push(topElement);
    
    
}


void reverse(stack<int>& st){
    
    //base case
    if(st.empty()) return;
    
    //step 1 
    int topElement = st.top();
    st.pop();
    
    //step 2
    reverse(st);
    
    //step 3
    insertAtBottom(st, topElement);
    
}

int
main ()
{
  stack < int >st;
  st.push (4);
  st.push (6);
  st.push (8);
 

  insertAtBottom(st,15);
  reverse(st);
  
  while(!st.empty()){
      
      cout<<st.top()<<endl;
      st.pop();
  }

  return 0;
}
